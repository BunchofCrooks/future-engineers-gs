{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"WRO Future Engineers Getting Started Starting from the season 2020 World Robot Olympiad extends the set of the competitions suggested for school students around the world by a new competition \"Future Engineers\". The WRO Future Engineers is the competition of the self-driven vehicles. Students of the age group from 15 till 19 need to design a model of a car, equip it with electromechanical components and program it as so it will be able to autonomously drive on the track avoiding objections. More details about the competition can be found on the official site of WRO Association . The Future Engineers challenge does not limit the students with any specific hardware and programming languages that is why working with electromechanical components (motors and sensors) and/or with a micro controller could cause some difficulties. Moreover, the most effective way to make the car fully autonomous is to use a camera and computer vision algorithms which are also completely new direction in WRO competition and never used before. Therefore the goal of this site is to provide materials for an initial understanding how the self-driving vehicle can be build and how it can be programmed to achieve a result in the competition.","title":"WRO Future Engineers Getting Started"},{"location":"#wro-future-engineers-getting-started","text":"Starting from the season 2020 World Robot Olympiad extends the set of the competitions suggested for school students around the world by a new competition \"Future Engineers\". The WRO Future Engineers is the competition of the self-driven vehicles. Students of the age group from 15 till 19 need to design a model of a car, equip it with electromechanical components and program it as so it will be able to autonomously drive on the track avoiding objections. More details about the competition can be found on the official site of WRO Association . The Future Engineers challenge does not limit the students with any specific hardware and programming languages that is why working with electromechanical components (motors and sensors) and/or with a micro controller could cause some difficulties. Moreover, the most effective way to make the car fully autonomous is to use a camera and computer vision algorithms which are also completely new direction in WRO competition and never used before. Therefore the goal of this site is to provide materials for an initial understanding how the self-driving vehicle can be build and how it can be programmed to achieve a result in the competition.","title":"WRO Future Engineers Getting Started"},{"location":"p01-chassis/","text":"Chassis This section covers such aspects of building the vehicle for the competition as a chassis and tires. Steering mechanism Even if the game rules of the Future Engineering competition does not require to build your own vehicle and allow to use a base of an RC (remote controlled) toy cars, someone would find useful to design everything from very beginning. It will allow to get grain control over the hardware, increase efficiency and reduce errors introduced by the third party's implementations. The design of the vehicle is dictated by the approach is chosen to drive the rear wheels and implement the steering mechanics. Usually, in the most simple case the rear wheels are fixed on the same axle and rotated by one DC motor. The steering mechanism on the front axle could be build in several ways where the main idea is to change of the angle of the front wheels direction. Since these concepts are already widely implemented in the RC toy cars and the RC sport vehicles, it makes sense to make a research through available materials. For example, this video presents one of the way to build the steering mechanism: More videos referenced in the next list consider other approaches to acheive the same goal: 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 . When you get a basic understanding how your vehicle could look like, you can look at the following instructions that could help to think of the assembling process in more professional manner: Click on the picture or here to download the instructions. Note, that some instructions above uses two motors to rotate the rear wheels. In some cases it will make the control of the vehicle more complex since the motors could rotate asynchronously that needs to be compensated by the steering. Tires By the way, during experiments you can find that the tires in the vehicle have no enough friction with the field surface, so it make sense to consider to try to prepare your own tires for wheels. The following links could bring other brilliant ideas how to make the tires for the vehicle: 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 .","title":"Chassis"},{"location":"p01-chassis/#chassis","text":"This section covers such aspects of building the vehicle for the competition as a chassis and tires.","title":"Chassis"},{"location":"p01-chassis/#steering-mechanism","text":"Even if the game rules of the Future Engineering competition does not require to build your own vehicle and allow to use a base of an RC (remote controlled) toy cars, someone would find useful to design everything from very beginning. It will allow to get grain control over the hardware, increase efficiency and reduce errors introduced by the third party's implementations. The design of the vehicle is dictated by the approach is chosen to drive the rear wheels and implement the steering mechanics. Usually, in the most simple case the rear wheels are fixed on the same axle and rotated by one DC motor. The steering mechanism on the front axle could be build in several ways where the main idea is to change of the angle of the front wheels direction. Since these concepts are already widely implemented in the RC toy cars and the RC sport vehicles, it makes sense to make a research through available materials. For example, this video presents one of the way to build the steering mechanism: More videos referenced in the next list consider other approaches to acheive the same goal: 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 . When you get a basic understanding how your vehicle could look like, you can look at the following instructions that could help to think of the assembling process in more professional manner: Click on the picture or here to download the instructions. Note, that some instructions above uses two motors to rotate the rear wheels. In some cases it will make the control of the vehicle more complex since the motors could rotate asynchronously that needs to be compensated by the steering.","title":"Steering mechanism"},{"location":"p01-chassis/#tires","text":"By the way, during experiments you can find that the tires in the vehicle have no enough friction with the field surface, so it make sense to consider to try to prepare your own tires for wheels. The following links could bring other brilliant ideas how to make the tires for the vehicle: 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 .","title":"Tires"},{"location":"p02-electronics/","text":"Electromechanical components Here are materials that aimed to help understand how to make the vehicle is smarter than an RC toy. Design leading questions Definitely, the obstacles detection and decision making for the motion planning must be done ad-hoc by en electronic brain rather than by a human being. That's why it is needed to choose the set of controllers, electronic components and design the logic to connect them to each other. They will mostly rely on the way how the vehicle will solve the task. But some ideas will be common due to the nature of the challenge. Here is the set of questions that is intended to boost the process of thinking about electronic filling of the autonomous car: Will a camera be used to recognize the traffic signs (red and green pillars)? Is it an USB-camera or a natively plugged device (like the Raspberry Pi camera)? How fast the video stream from the camera must be handled? What is suitable performance of the decision making controller? Will the vehicle be controlled by one controller or by a pair of the main controller and an auxiliary controller? How will the roles between controllers be distributed: handling of the video stream, direct control of the motors, direct acquiring of sensors readings? Will capacity (input/output pins) of each controller be enough for this? What kind of connection will be between the controllers? Will the walls be detected by camera or by a distance/proximity sensors? Should a special lens kit be used to make the camera's field of view wider to recognize both traffic signs and walls or several cameras will be used instead? How will the passed path be measured: by counting numbers of turns with a compass or a gyroscope, by calculating the distance with an encoder(s), by detecting colored lines with light sensors? Will a gyroscope and/or an accelerometer be used to assist in accurate driving -- get rid of excessive steering mechanism shifts? What kind of power sources should be used to supply controllers, motors and senors? Should it be one source for all consumers or dedicated sources for controllers and motors? Overview Before start drawing schemes and purchasing the components, usually it is worth to review existing solutions: what electromechanical components are the common practice to use for the robotics projects where the aim is to create a self-driving vehicle. This is a short collection of the links to study. Descriptions of these projects provides different level of details that's why we list several of them to demonstrate diversity of approaches: Is your toy RC car is good to become autonomous robotics car? A good start to turn an RC car to Arduino controlled car An example of equipping an RC car with sensors and Arduino controller Not sure how to start driving autonomously? Start with these fours simple turtle-like car based on Arduino: 1 , 2 , 3 , 4 Yet another DIY autonomous vehicles but pay attention on the powering Vehicle's brain If this is the first time when you meet with Single Board Microcontrollers like Arduino or Single Board Computers like Raspberry Pi, consider to spend extra time to understand the difference between them. For example, the goal of this article to summarize advantages of SBM and SBC with advices when use Arduino, when Raspberry Pi and when both. Okay, hope the advantages are clear, and that is why it make sense to compare the Raspberry Pi with other SBCs: Click on the picture to watch the video Another interesting approach could be is to use and integrated Computer Vision boards instead of SBC. This material compares OpenMV, Pixy and Jevois. Someone already decides to build the vehicle with two controllers: the primary controller is to execute navigation, path planning and work with a camera, the secondary is to requests sensors and/or control motors. Most probably the secondary controller will be an Arduino based and the following step is learn how it could be connected to the primary one. There are several protocols that can be used for this and this document is good to start getting familiar with them. Next, depending on the protocol the following materials will help you implement communication channel between Raspberry Pi an Arduino: Serial communication: 1 , 2 , 3 , 4 . I2C communication: 1 , 2 , 3 . Motors The minimal number of motors that required for a vehicle participating in the Future Engineers competition is two: a driving motor and a motor to steer. Motor Basics Motor Driver Using a Servo Motor for the Steering The driving motor makes the car moving. This motors consumes more power than can be provided either by Arduino or by Raspberry Pi therefore an additional motor driver circuit is being used. Here are examples how to control DC motors from Arudino: 1 , 2 , 3 ; or from Raspberry Pi: 1 . As an alternative to the DC motors, one could consider to use a stepper motor or a continuous servomotor . A servo motor is the most suitable way to change direction of the vehicle since it provides precise control on the steering process. Here are examples how to control DC motors from Arudino: 1 , 2 , 3 , 4 ; or from Raspberry Pi: 1 . Encoders It is important to control the driving motor speed and the distance the vehicle is moving. One of the simplest device for this is an encoder: Click on the picture to watch the video These three articles will help you better understand how encoders work: 1 , 2 , 3 . And here are practical examples how an encoder can be added to the autonomous vehicle: Setup an encoder on a chassis Use encoder built in the motor Distance sensors Distance and proximity sensors are commonly used in robotics. For the autonomous vehicle participating in the Future Engineers competition such kind of devices will allow to control the distance to the walls as so the car will move in the middle between them. Here is a set of short reviews of different sensors (ultrasonic, infrared and LiDAR) describing the principles how they work and which advantages and disadvantages they have: 1 , 2 , 3 . IMU IMU is an abbreviation for the term Inertial Measurement Unit. Usually, this abbreviation is used for a device that combines accelerometer, gyroscope and magnetometer. In order to get a useful data from this sensor, in most cases it is required to implement concepts from the linear algebra and calculus. But depending on the libraries provided by the sensor manufactures and/or open source community, this could be already simplified a lot as so the IMU sensor can be used to measure the path driven by the vehicle and to control steering smoothness. We provide links to three articles that are good start to understand how IMU can be used in a robotics projects: 1 , 2 , 3 . Power Powering of the self-driving car for the robotics competition is not a trivial task. Depending on types of the motors and number of controllers, it could be found that separate power sources must be provided for different consumers. The materials below should allow you better understand approaches that can be used to power the controllers and motors: How to power the Arduino board: 1 , 2 How to power Raspberry Pi Powering Motors with Arduino Important note about the ground sharing Usage a power bank with Arduino and Motors Additional info to power the project","title":"Electronics"},{"location":"p02-electronics/#electromechanical-components","text":"Here are materials that aimed to help understand how to make the vehicle is smarter than an RC toy.","title":"Electromechanical components"},{"location":"p02-electronics/#design-leading-questions","text":"Definitely, the obstacles detection and decision making for the motion planning must be done ad-hoc by en electronic brain rather than by a human being. That's why it is needed to choose the set of controllers, electronic components and design the logic to connect them to each other. They will mostly rely on the way how the vehicle will solve the task. But some ideas will be common due to the nature of the challenge. Here is the set of questions that is intended to boost the process of thinking about electronic filling of the autonomous car: Will a camera be used to recognize the traffic signs (red and green pillars)? Is it an USB-camera or a natively plugged device (like the Raspberry Pi camera)? How fast the video stream from the camera must be handled? What is suitable performance of the decision making controller? Will the vehicle be controlled by one controller or by a pair of the main controller and an auxiliary controller? How will the roles between controllers be distributed: handling of the video stream, direct control of the motors, direct acquiring of sensors readings? Will capacity (input/output pins) of each controller be enough for this? What kind of connection will be between the controllers? Will the walls be detected by camera or by a distance/proximity sensors? Should a special lens kit be used to make the camera's field of view wider to recognize both traffic signs and walls or several cameras will be used instead? How will the passed path be measured: by counting numbers of turns with a compass or a gyroscope, by calculating the distance with an encoder(s), by detecting colored lines with light sensors? Will a gyroscope and/or an accelerometer be used to assist in accurate driving -- get rid of excessive steering mechanism shifts? What kind of power sources should be used to supply controllers, motors and senors? Should it be one source for all consumers or dedicated sources for controllers and motors?","title":"Design leading questions"},{"location":"p02-electronics/#overview","text":"Before start drawing schemes and purchasing the components, usually it is worth to review existing solutions: what electromechanical components are the common practice to use for the robotics projects where the aim is to create a self-driving vehicle. This is a short collection of the links to study. Descriptions of these projects provides different level of details that's why we list several of them to demonstrate diversity of approaches: Is your toy RC car is good to become autonomous robotics car? A good start to turn an RC car to Arduino controlled car An example of equipping an RC car with sensors and Arduino controller Not sure how to start driving autonomously? Start with these fours simple turtle-like car based on Arduino: 1 , 2 , 3 , 4 Yet another DIY autonomous vehicles but pay attention on the powering","title":"Overview"},{"location":"p02-electronics/#vehicles-brain","text":"If this is the first time when you meet with Single Board Microcontrollers like Arduino or Single Board Computers like Raspberry Pi, consider to spend extra time to understand the difference between them. For example, the goal of this article to summarize advantages of SBM and SBC with advices when use Arduino, when Raspberry Pi and when both. Okay, hope the advantages are clear, and that is why it make sense to compare the Raspberry Pi with other SBCs: Click on the picture to watch the video Another interesting approach could be is to use and integrated Computer Vision boards instead of SBC. This material compares OpenMV, Pixy and Jevois. Someone already decides to build the vehicle with two controllers: the primary controller is to execute navigation, path planning and work with a camera, the secondary is to requests sensors and/or control motors. Most probably the secondary controller will be an Arduino based and the following step is learn how it could be connected to the primary one. There are several protocols that can be used for this and this document is good to start getting familiar with them. Next, depending on the protocol the following materials will help you implement communication channel between Raspberry Pi an Arduino: Serial communication: 1 , 2 , 3 , 4 . I2C communication: 1 , 2 , 3 .","title":"Vehicle's brain"},{"location":"p02-electronics/#motors","text":"The minimal number of motors that required for a vehicle participating in the Future Engineers competition is two: a driving motor and a motor to steer. Motor Basics Motor Driver Using a Servo Motor for the Steering The driving motor makes the car moving. This motors consumes more power than can be provided either by Arduino or by Raspberry Pi therefore an additional motor driver circuit is being used. Here are examples how to control DC motors from Arudino: 1 , 2 , 3 ; or from Raspberry Pi: 1 . As an alternative to the DC motors, one could consider to use a stepper motor or a continuous servomotor . A servo motor is the most suitable way to change direction of the vehicle since it provides precise control on the steering process. Here are examples how to control DC motors from Arudino: 1 , 2 , 3 , 4 ; or from Raspberry Pi: 1 .","title":"Motors"},{"location":"p02-electronics/#encoders","text":"It is important to control the driving motor speed and the distance the vehicle is moving. One of the simplest device for this is an encoder: Click on the picture to watch the video These three articles will help you better understand how encoders work: 1 , 2 , 3 . And here are practical examples how an encoder can be added to the autonomous vehicle: Setup an encoder on a chassis Use encoder built in the motor","title":"Encoders"},{"location":"p02-electronics/#distance-sensors","text":"Distance and proximity sensors are commonly used in robotics. For the autonomous vehicle participating in the Future Engineers competition such kind of devices will allow to control the distance to the walls as so the car will move in the middle between them. Here is a set of short reviews of different sensors (ultrasonic, infrared and LiDAR) describing the principles how they work and which advantages and disadvantages they have: 1 , 2 , 3 .","title":"Distance sensors"},{"location":"p02-electronics/#imu","text":"IMU is an abbreviation for the term Inertial Measurement Unit. Usually, this abbreviation is used for a device that combines accelerometer, gyroscope and magnetometer. In order to get a useful data from this sensor, in most cases it is required to implement concepts from the linear algebra and calculus. But depending on the libraries provided by the sensor manufactures and/or open source community, this could be already simplified a lot as so the IMU sensor can be used to measure the path driven by the vehicle and to control steering smoothness. We provide links to three articles that are good start to understand how IMU can be used in a robotics projects: 1 , 2 , 3 .","title":"IMU"},{"location":"p02-electronics/#power","text":"Powering of the self-driving car for the robotics competition is not a trivial task. Depending on types of the motors and number of controllers, it could be found that separate power sources must be provided for different consumers. The materials below should allow you better understand approaches that can be used to power the controllers and motors: How to power the Arduino board: 1 , 2 How to power Raspberry Pi Powering Motors with Arduino Important note about the ground sharing Usage a power bank with Arduino and Motors Additional info to power the project","title":"Power"},{"location":"p03-programming/","text":"How to program This section provides links on the materials describing different aspects of programming Arduino and Raspberry Pi boards. Arduino Since the Arduino board is quite mature technology there are lots of materials covering different aspects of developing programs to control peripheral devices connected to the controller. The development process is trivial: the program are written on a PC or a laptop, compiled and downloaded to the Arudino controller by using a USB cable. Most probably, you will use Arduino IDE to create programs, so it will perform all the actions described above automatically. Before attempts to prepare the first sketch (a sketch is the name that Arduino uses for a program) read few advices that could help to become more successful as an Arduino programmer: Writing code of Arduino devices 5 tips to improve your Arduino coding skills . Different ways to control motors and query sensors has been covered in the section Electromechanical components therefore they will not be repeated here. Instead it is necessary to focus on some tips and tricks, and advanced techniques that are used for complex projects. For example, the portal The Robotics Back-End has the great list of Arduino tutorials. Here you can find an answer for question whether Arduino is good for industrial projects , learn how to write multitasking applications on Arduino , practise to create your own Arduino library and understand techniques to write realtime software for Arduino . Eventually, you could be ready to use the Arduino board as a powerful driver. The main controller (Raspberry Pi) will encode and send commands to this driver, it will decode the commands and schedule getting information from sensors or prepare instructions for motors. Consider the following set of useful tutorials and libraries that could help you build control systems based on Arduino: A library for Non-trivial programing for Arduino Event-based Programming with Arduino State machines with Arduino: State machines tutorial Multitasking on the Arduino with a Finite State Machine Finite State Machine Programming Basics: part 1 and part 2 A library that implements a basic State Machine Separately it is necessary to say about the digital signal processing . When you work with digital and analogue sensors, you will definitely meet with the fact that most of these sensors are noisy. In some cases they could have their own noise suppression mechanism but sometimes it is necessary to implement your own approach to handle data received from the sensors. That's why it makes sense to start learning different ways how to \"de-noise\" the sensor readings, so take into consideration the following articles: Three Methods to Filter Noisy Arduino Measurements Simple High-pass, Band-pass and Band-stop Filtering Implementation of Basic Filters Raspberry Pi TBD","title":"How to program"},{"location":"p03-programming/#how-to-program","text":"This section provides links on the materials describing different aspects of programming Arduino and Raspberry Pi boards.","title":"How to program"},{"location":"p03-programming/#arduino","text":"Since the Arduino board is quite mature technology there are lots of materials covering different aspects of developing programs to control peripheral devices connected to the controller. The development process is trivial: the program are written on a PC or a laptop, compiled and downloaded to the Arudino controller by using a USB cable. Most probably, you will use Arduino IDE to create programs, so it will perform all the actions described above automatically. Before attempts to prepare the first sketch (a sketch is the name that Arduino uses for a program) read few advices that could help to become more successful as an Arduino programmer: Writing code of Arduino devices 5 tips to improve your Arduino coding skills . Different ways to control motors and query sensors has been covered in the section Electromechanical components therefore they will not be repeated here. Instead it is necessary to focus on some tips and tricks, and advanced techniques that are used for complex projects. For example, the portal The Robotics Back-End has the great list of Arduino tutorials. Here you can find an answer for question whether Arduino is good for industrial projects , learn how to write multitasking applications on Arduino , practise to create your own Arduino library and understand techniques to write realtime software for Arduino . Eventually, you could be ready to use the Arduino board as a powerful driver. The main controller (Raspberry Pi) will encode and send commands to this driver, it will decode the commands and schedule getting information from sensors or prepare instructions for motors. Consider the following set of useful tutorials and libraries that could help you build control systems based on Arduino: A library for Non-trivial programing for Arduino Event-based Programming with Arduino State machines with Arduino: State machines tutorial Multitasking on the Arduino with a Finite State Machine Finite State Machine Programming Basics: part 1 and part 2 A library that implements a basic State Machine Separately it is necessary to say about the digital signal processing . When you work with digital and analogue sensors, you will definitely meet with the fact that most of these sensors are noisy. In some cases they could have their own noise suppression mechanism but sometimes it is necessary to implement your own approach to handle data received from the sensors. That's why it makes sense to start learning different ways how to \"de-noise\" the sensor readings, so take into consideration the following articles: Three Methods to Filter Noisy Arduino Measurements Simple High-pass, Band-pass and Band-stop Filtering Implementation of Basic Filters","title":"Arduino"},{"location":"p03-programming/#raspberry-pi","text":"TBD","title":"Raspberry Pi"},{"location":"p04-cv/","text":"Computer vision TBD","title":"Computer vision"},{"location":"p04-cv/#computer-vision","text":"TBD","title":"Computer vision"}]}